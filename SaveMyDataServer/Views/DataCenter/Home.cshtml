@model SaveMyDataServer.ViewModels.DataCenter.DataCenterHomeViewModel;
@{

    ViewData["Title"] = "Data Center";
}
<div class="container px-5 py-2 bg-light">
    <p class="font-weight-bold">Current databae: <span class="text-info font-weight-light" id="selected-database-name">@Model.Database</span></p>
    <p class="font-weight-bold">
        Tables <span class="badge badge-info align-middle">@Model.TablesAndCount.Count</span> :

        @foreach (var item in Model.TablesAndCount)
        {
            <span class="text-info font-weight-light">@item.Key<span class="badge badge-dark align-middle m-1" id="@item.Key-count">@item.Value</span> , </span>
        }
    </p>
    <hr class="my-1" />
    <form class="text-center">
        <div class=" grid">
            <div class="row">
                <select class="form-control col-10" id="dbTable" onchange="initializeTable()">
                    @{
                        foreach (var item in Model.TablesAndCount)
                        {
                            <option value="@item.Key">@item.Key </option>
                        }
                    }
                </select>
                <button class="btn btn-outline-success mx-1 col" type="button" onclick="shoEditTableModal(true)">Add</button>
                <button class="btn btn-outline-info col" type="button" onclick="shoEditTableModal()">Edit</button>

            </div>
        </div>
    </form>
    <button class="btn btn-outline-light color-excel-bg m-1" onclick="exportData(this,'@SaveMyDataServer.SharedKernal.Enums.SupportedExportFileTypes.Excel')">
        <i class="far fa-file-excel" aria-label="excel">
            <span class="sr-only">Export to excel</span>
        </i>
    </button>


    <hr class="my-1" />
    <h4 class="font-weight-bold mb-3">Filters</h4>
    <div class="grid" id="filter-grid">
        <div class="row">
            <input type="text" class="form-control col mx-1" placeholder="Field" id="filter-field">
            <input type="text" class="form-control col mx-1" placeholder="Value" id="filter-value">
            <button type="button" class="btn btn-outline-info" onclick="addNewFilter()">
                <i class="far fa-plus-square">
                    <span class="sr-only">Add filter to the search</span>
                </i>
            </button>
            <button type="button" class="btn btn-outline-success ml-1" onclick='initializeTable()'>
                <i class="fa fa-search">
                    <span class="sr-only">Add filter to the search</span>
                </i>
            </button>
        </div>
    </div>

</div>

<div class="container-fluid text-center">
    <h1 class="display-6 font-weight-bold d-inline-block">Table: <span class="text-info font-weight-light" id="selected-table-title"></span></h1>
    <button onclick="showEditModal(this,true)" class="btn btn-outline-success mb-3 ml-2">+</button>
    <div id="selected-table-content" class="text-left  table-responsive border">
        <div class="d-flex justify-content-center m-5 loading-spinner">
            <div class="spinner-grow" role="status">
                <span class="sr-only"> Loading...</span>'
            </div>
        </div>
    </div>
    <nav aria-label="page pagination" class="m-3" id="pagination-part">

    </nav>
</div>


<div class="modal fade " id="edit-record-modal">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <input hidden id="record-id" />
            <input hidden id="record-table-name" />
            <input hidden id="record-database-name" />
            <div class="modal-header">
                <h5 class="modal-title">Record panel </h5>
                <button class="close" aria-label="close" data-dismiss="modal">
                    <span class="text-info">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <button class="btn btn-outline-info mb-4" onclick="addNewFieldValueEmptyRow()">add</button>
                <div class="grid" id="edit-record-modal-body-grid">

                </div>
            </div>
            <div class="modal-footer" id="edit-modal-footer">
                <button class="btn btn-secondary" data-dismiss="modal">Close</button>
                <div id="edit-mode-buttons">
                    <button class="btn btn-danger" onclick="askConfirmation()">Delete</button>
                    <button class="btn btn-info" id="edit-modal-btn" onclick="editRecord(this)">Edit</button>
                </div>
                <div id="add-mode-buttons">
                    <button class="btn btn-success" onclick="addRecord(this)">Add</button>
                </div>
            </div>
        </div>
    </div>
</div>

@Html.Partial("_ConfirmationModals")

<div class="modal fade" id="edit-table-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Table Panel</h5>
            </div>
            <div class="modal-body">
                <div class="edit-table-modal-buttons">
                    <div class="input-group mb-3 ">
                        <div class="input-group-prepend">
                            <span class="input-group-text">Name</span>
                        </div>
                        <input type="text" class="form-control selected-table-name-holder" disabled />
                    </div>
                </div>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text">New name</span>
                    </div>
                    <input type="text" class="form-control" id="table-new-name" />
                </div>

            </div>
            <div class="modal-footer" id="edit-modal-footer">
                <button class="btn btn-secondary" data-dismiss="modal">Close</button>
                <div class="edit-table-modal-buttons">
                    <button class="btn btn-info" onclick='editTable(this)'>Edit</button>
                    <button class="btn btn-danger" onclick="showDeleteTableConfirmation()" id="delete-modal-btn">Delete</button>
                </div>
                <div id="add-table-modal-buttons">
                    <button class="btn btn-success" onclick='addTable(this)'>Add</button>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="modal bg-dark fade" id="delete-table-confirmation-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Please confirme the delete operation</h5>
            </div>
            <div class="modal-body">
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text">Name</span>
                    </div>
                    <input type="text" class="form-control selected-table-name-holder" disabled />
                </div>
            </div>
            <div class="modal-footer" id="edit-modal-footer">
                <button class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button class="btn btn-danger" onclick="deleteTable(this)" id="delete-modal-btn">Delete</button>
            </div>
        </div>
    </div>
</div>

<script src="~/js/Custom/colors.js" type="text/javascript"></script>
<script src="~/js/Custom/spinners.js" type="text/javascript"></script>
<script src="~/js/Custom/dataCenterHome.js" type="text/javascript"></script>
<script src="~/js/Custom/pagination.js" type="text/javascript"></script>
<script src="~/js/Custom/tables.js" type="text/javascript"></script>

<script>
    //cross values
    //The count of records to get in each request
    var recordsCountInTable = @SaveMyDataServer.Static.ServerPaginationCount.NormalPage;
    var workingDatabase = '@Model.Database';

    //Once the documnet is loaded
    $(function () {
        initializeTable();
    })
    //
    //Requests to export the data into the wanted type
    // type: the type to export the data for
    //
    function exportData(element, type) {
        location.href = '@SaveMyDataServer.Static.ServerAjaxURLs.ExportData'+'?table=' + document.getElementById('selected-table-title').innerText +'&database=' + workingDatabase +'&type='+ type;
        return false;
    }
    //
    //Exports a single record into a the wanted file type
    // id : the id of the record to export
    // type : the type of file we want to export to
    //
    function exportRecord(id, type) {
        location.href = '@SaveMyDataServer.Static.ServerAjaxURLs.ExportRecord'+'?id=' + id + '&table=' + document.getElementById('selected-table-title').innerText +'&database=' + workingDatabase +'&type='+ type;
        return false;

    }
</script>

<script>
    //
    //Adds a new filter to the filters grid
    //
    function addNewFilter() {
        //Get the grid element in which we add the filters to
        var filters = document.getElementById('filter-grid');
        //Create the row elemnt
        var gridRow = document.createElement('div', { class: "row" });
        gridRow.classList.add('row', 'filter');
        //Get the filter filed and value from the input boxes
        var filterValueElement = document.getElementById('filter-value');
        var filterFieldElement = document.getElementById('filter-field');
        //Create the filter element
        var filter = document.createElement('input');
        filter.classList.add('form-control', 'my-2', 'col', 'text-info');
        filter.setAttribute('value', `${filterFieldElement.value} : {${filterValueElement.value}}`);
        filter.setAttribute('disabled', true);
        //Create the delete button
        var deleteButton = document.createElement('button');
        deleteButton.classList.add('btn', 'btn-outline-danger', 'm-2');
        deleteButton.setAttribute('onclick', 'deleteGridRow(this)')
        var deleteIcon = document.createElement('i');
        deleteIcon.classList.add('far', 'fa-minus-square');
        var deleteScreenReader = document.createElement('span');
        deleteScreenReader.classList.add('sr-only');
        deleteScreenReader.setAttribute('innerText', 'remove filter')
        deleteIcon.appendChild(deleteScreenReader);
        deleteButton.appendChild(deleteIcon);
        //add the elements to the row
        gridRow.appendChild(filter);
        gridRow.appendChild(deleteButton);
        //add the elements into the filter grid
        filters.appendChild(gridRow);

        //Clear input box values
        filterValueElement.value = "";
        filterFieldElement.value = "";
    }

    //
    //Searchs for the grid row up the dom tree and deletes it
    //
    function deleteGridRow(element) {
        //Get the parent grid row
        var gridRow = element.closest('.row');
        //Remove the element
        gridRow.remove();
    }
</script>
